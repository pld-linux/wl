--- wl-6.30.223.271/wl/src/shared/linux_osl.c~	2020-04-04 23:51:43.000000000 +0200
+++ wl-6.30.223.271/wl/src/shared/linux_osl.c	2020-04-05 22:13:14.896669372 +0200
@@ -929,7 +929,11 @@
 void *
 osl_reg_map(uint32 pa, uint size)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 6, 0)
 	return (ioremap_nocache((unsigned long)pa, (unsigned long)size));
+#else
+	return (ioremap((unsigned long)pa, (unsigned long)size));
+#endif
 }
 
 void
--- wl-6.30.223.271/wl/src/wl/sys/wl_linux.c~	2020-04-04 23:51:43.000000000 +0200
+++ wl-6.30.223.271/wl/src/wl/sys/wl_linux.c	2020-04-05 22:14:41.633337296 +0200
@@ -586,7 +586,11 @@
 	}
 	wl->bcm_bustype = bustype;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 6, 0)
 	if ((wl->regsva = ioremap_nocache(dev->base_addr, PCI_BAR0_WINSZ)) == NULL) {
+#else
+	if ((wl->regsva = ioremap(dev->base_addr, PCI_BAR0_WINSZ)) == NULL) {
+#endif
 		WL_ERROR(("wl%d: ioremap() failed\n", unit));
 		goto fail;
 	}
@@ -783,7 +787,11 @@
 	if ((val & 0x0000ff00) != 0)
 		pci_write_config_dword(pdev, 0x40, val & 0xffff00ff);
 		bar1_size = pci_resource_len(pdev, 2);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 6, 0)
 		bar1_addr = (uchar *)ioremap_nocache(pci_resource_start(pdev, 2),
+#else
+		bar1_addr = (uchar *)ioremap(pci_resource_start(pdev, 2),
+#endif
 			bar1_size);
 	wl = wl_attach(pdev->vendor, pdev->device, pci_resource_start(pdev, 0), PCI_BUS, pdev,
 		pdev->irq, bar1_addr, bar1_size);
@@ -3374,11 +3374,18 @@
 }
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 6, 0)
 static const struct file_operations wl_fops = {
 	.owner	= THIS_MODULE,
 	.read	= wl_proc_read,
 	.write	= wl_proc_write,
 };
+#else
+static const struct proc_ops wl_fops = {
+	.proc_read	= wl_proc_read,
+	.proc_write	= wl_proc_write,
+};
+#endif
 #endif
 
 static int
